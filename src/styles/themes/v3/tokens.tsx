import { Platform } from 'react-native';
import type { Font } from '../../../types';

import {
  MdRefPalettePrimary0,
  MdRefPalettePrimary10,
  MdRefPalettePrimary20,
  MdRefPalettePrimary30,
  MdRefPalettePrimary40,
  MdRefPalettePrimary50,
  MdRefPalettePrimary60,
  MdRefPalettePrimary70,
  MdRefPalettePrimary80,
  MdRefPalettePrimary90,
  MdRefPalettePrimary95,
  MdRefPalettePrimary99,
  MdRefPalettePrimary100,
  MdRefPaletteSecondary0,
  MdRefPaletteSecondary10,
  MdRefPaletteSecondary20,
  MdRefPaletteSecondary30,
  MdRefPaletteSecondary40,
  MdRefPaletteSecondary50,
  MdRefPaletteSecondary60,
  MdRefPaletteSecondary70,
  MdRefPaletteSecondary80,
  MdRefPaletteSecondary90,
  MdRefPaletteSecondary95,
  MdRefPaletteSecondary99,
  MdRefPaletteSecondary100,
  MdRefPaletteTertiary0,
  MdRefPaletteTertiary10,
  MdRefPaletteTertiary20,
  MdRefPaletteTertiary30,
  MdRefPaletteTertiary40,
  MdRefPaletteTertiary50,
  MdRefPaletteTertiary60,
  MdRefPaletteTertiary70,
  MdRefPaletteTertiary80,
  MdRefPaletteTertiary90,
  MdRefPaletteTertiary95,
  MdRefPaletteTertiary99,
  MdRefPaletteTertiary100,
  MdRefPaletteNeutral0,
  MdRefPaletteNeutral10,
  MdRefPaletteNeutral20,
  MdRefPaletteNeutral30,
  MdRefPaletteNeutral40,
  MdRefPaletteNeutral50,
  MdRefPaletteNeutral60,
  MdRefPaletteNeutral70,
  MdRefPaletteNeutral80,
  MdRefPaletteNeutral90,
  MdRefPaletteNeutral95,
  MdRefPaletteNeutral99,
  MdRefPaletteNeutral100,
  MdRefPaletteError0,
  MdRefPaletteError10,
  MdRefPaletteError20,
  MdRefPaletteError30,
  MdRefPaletteError40,
  MdRefPaletteError50,
  MdRefPaletteError60,
  MdRefPaletteError70,
  MdRefPaletteError80,
  MdRefPaletteError90,
  MdRefPaletteError95,
  MdRefPaletteError99,
  MdRefPaletteError100,
  MdRefPaletteNeutralVariant0,
  MdRefPaletteNeutralVariant10,
  MdRefPaletteNeutralVariant20,
  MdRefPaletteNeutralVariant30,
  MdRefPaletteNeutralVariant40,
  MdRefPaletteNeutralVariant50,
  MdRefPaletteNeutralVariant60,
  MdRefPaletteNeutralVariant70,
  MdRefPaletteNeutralVariant80,
  MdRefPaletteNeutralVariant90,
  MdRefPaletteNeutralVariant95,
  MdRefPaletteNeutralVariant99,
  MdRefPaletteNeutralVariant100,
  MdSysTypescaleDisplayLargeLineHeight,
  MdSysTypescaleDisplayLargeSize,
  MdSysTypescaleDisplayMediumLineHeight,
  MdSysTypescaleDisplayMediumSize,
  MdSysTypescaleDisplaySmallLineHeight,
  MdSysTypescaleDisplaySmallSize,
  MdSysTypescaleHeadlineLargeLineHeight,
  MdSysTypescaleHeadlineLargeSize,
  MdSysTypescaleHeadlineMediumSize,
  MdSysTypescaleHeadlineMediumLineHeight,
  MdSysTypescaleHeadlineSmallSize,
  MdSysTypescaleHeadlineSmallLineHeight,
  MdSysTypescaleTitleLargeLineHeight,
  MdSysTypescaleTitleLargeSize,
  MdSysTypescaleTitleMediumLineHeight,
  MdSysTypescaleTitleMediumSize,
  MdSysTypescaleTitleSmallTracking,
  MdSysTypescaleTitleSmallLineHeight,
  MdSysTypescaleTitleSmallSize,
  MdSysTypescaleLabelLargeLineHeight,
  MdSysTypescaleLabelLargeSize,
  MdSysTypescaleLabelLargeTracking,
  MdSysTypescaleLabelMediumTracking,
  MdSysTypescaleLabelMediumLineHeight,
  MdSysTypescaleLabelMediumSize,
  MdSysTypescaleLabelSmallTracking,
  MdSysTypescaleLabelSmallLineHeight,
  MdSysTypescaleLabelSmallSize,
  MdSysTypescaleBodyLargeSize,
  MdSysTypescaleBodyLargeLineHeight,
  MdSysTypescaleBodyLargeWeight,
  MdSysTypescaleBodyMediumTracking,
  MdSysTypescaleBodyMediumLineHeight,
  MdSysTypescaleBodyMediumSize,
  MdSysTypescaleBodySmallTracking,
  MdSysTypescaleBodySmallLineHeight,
  MdSysTypescaleBodySmallSize,
} from '@jmsstudiosinc/material-tokens';

const ref = {
  palette: {
    primary100: MdRefPalettePrimary100,
    primary99: MdRefPalettePrimary99,
    primary95: MdRefPalettePrimary95,
    primary90: MdRefPalettePrimary90,
    primary80: MdRefPalettePrimary80,
    primary70: MdRefPalettePrimary70,
    primary60: MdRefPalettePrimary60,
    primary50: MdRefPalettePrimary50,
    primary40: MdRefPalettePrimary40,
    primary30: MdRefPalettePrimary30,
    primary20: MdRefPalettePrimary20,
    primary10: MdRefPalettePrimary10,
    primary0: MdRefPalettePrimary0,

    secondary100: MdRefPaletteSecondary100,
    secondary99: MdRefPaletteSecondary99,
    secondary95: MdRefPaletteSecondary95,
    secondary90: MdRefPaletteSecondary90,
    secondary80: MdRefPaletteSecondary80,
    secondary70: MdRefPaletteSecondary70,
    secondary60: MdRefPaletteSecondary60,
    secondary50: MdRefPaletteSecondary50,
    secondary40: MdRefPaletteSecondary40,
    secondary30: MdRefPaletteSecondary30,
    secondary20: MdRefPaletteSecondary20,
    secondary10: MdRefPaletteSecondary10,
    secondary0: MdRefPaletteSecondary0,

    tertiary100: MdRefPaletteTertiary100,
    tertiary99: MdRefPaletteTertiary99,
    tertiary95: MdRefPaletteTertiary95,
    tertiary90: MdRefPaletteTertiary90,
    tertiary80: MdRefPaletteTertiary80,
    tertiary70: MdRefPaletteTertiary70,
    tertiary60: MdRefPaletteTertiary60,
    tertiary50: MdRefPaletteTertiary50,
    tertiary40: MdRefPaletteTertiary40,
    tertiary30: MdRefPaletteTertiary30,
    tertiary20: MdRefPaletteTertiary20,
    tertiary10: MdRefPaletteTertiary10,
    tertiary0: MdRefPaletteTertiary0,

    neutral100: MdRefPaletteNeutral100,
    neutral99: MdRefPaletteNeutral99,
    neutral95: MdRefPaletteNeutral95,
    neutral90: MdRefPaletteNeutral90,
    neutral80: MdRefPaletteNeutral80,
    neutral70: MdRefPaletteNeutral70,
    neutral60: MdRefPaletteNeutral60,
    neutral50: MdRefPaletteNeutral50,
    neutral40: MdRefPaletteNeutral40,
    neutral30: MdRefPaletteNeutral30,
    neutral20: MdRefPaletteNeutral20,
    neutral10: MdRefPaletteNeutral10,
    neutral0: MdRefPaletteNeutral0,

    neutralVariant100: MdRefPaletteNeutralVariant100,
    neutralVariant99: MdRefPaletteNeutralVariant99,
    neutralVariant95: MdRefPaletteNeutralVariant95,
    neutralVariant90: MdRefPaletteNeutralVariant90,
    neutralVariant80: MdRefPaletteNeutralVariant80,
    neutralVariant70: MdRefPaletteNeutralVariant70,
    neutralVariant60: MdRefPaletteNeutralVariant60,
    neutralVariant50: MdRefPaletteNeutralVariant50,
    neutralVariant40: MdRefPaletteNeutralVariant40,
    neutralVariant30: MdRefPaletteNeutralVariant30,
    neutralVariant20: MdRefPaletteNeutralVariant20,
    neutralVariant10: MdRefPaletteNeutralVariant10,
    neutralVariant0: MdRefPaletteNeutralVariant0,

    error100: MdRefPaletteError100,
    error99: MdRefPaletteError99,
    error95: MdRefPaletteError95,
    error90: MdRefPaletteError90,
    error80: MdRefPaletteError80,
    error70: MdRefPaletteError70,
    error60: MdRefPaletteError60,
    error50: MdRefPaletteError50,
    error40: MdRefPaletteError40,
    error30: MdRefPaletteError30,
    error20: MdRefPaletteError20,
    error10: MdRefPaletteError10,
    error0: MdRefPaletteError0,
  },

  typeface: {
    brandRegular: Platform.select({
      web: 'Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif',
      ios: 'System',
      default: 'sans-serif',
    }),
    weightRegular: MdSysTypescaleBodyLargeWeight as Font['fontWeight'],

    plainMedium: Platform.select({
      web: 'Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif',
      ios: 'System',
      default: 'sans-serif-medium',
    }),
    weightMedium: '500' as Font['fontWeight'],
  },

  opacity: {
    level1: 0.08,
    level2: 0.12,
    level3: 0.16,
    level4: 0.38,
  },
};

const regularType = {
  fontFamily: ref.typeface.brandRegular,
  letterSpacing: 0,
  fontWeight: ref.typeface.weightRegular,
};

const mediumType = {
  fontFamily: ref.typeface.plainMedium,
  letterSpacing: 0.15,
  fontWeight: ref.typeface.weightMedium,
};

export const typescale = {
  displayLarge: {
    ...regularType,
    lineHeight: parseFloat(MdSysTypescaleDisplayLargeLineHeight),
    fontSize: parseFloat(MdSysTypescaleDisplayLargeSize),
  },
  displayMedium: {
    ...regularType,
    lineHeight: parseFloat(MdSysTypescaleDisplayMediumLineHeight),
    fontSize: parseFloat(MdSysTypescaleDisplayMediumSize),
  },
  displaySmall: {
    ...regularType,
    lineHeight: parseFloat(MdSysTypescaleDisplaySmallLineHeight),
    fontSize: parseFloat(MdSysTypescaleDisplaySmallSize),
  },

  headlineLarge: {
    ...regularType,
    lineHeight: parseFloat(MdSysTypescaleHeadlineLargeLineHeight),
    fontSize: parseFloat(MdSysTypescaleHeadlineLargeSize),
  },
  headlineMedium: {
    ...regularType,
    lineHeight: parseFloat(MdSysTypescaleHeadlineMediumLineHeight),
    fontSize: parseFloat(MdSysTypescaleHeadlineMediumSize),
  },
  headlineSmall: {
    ...regularType,
    lineHeight: parseFloat(MdSysTypescaleHeadlineSmallLineHeight),
    fontSize: parseFloat(MdSysTypescaleHeadlineSmallSize),
  },

  titleLarge: {
    ...regularType,
    lineHeight: parseFloat(MdSysTypescaleTitleLargeLineHeight),
    fontSize: parseFloat(MdSysTypescaleTitleLargeSize),
  },
  titleMedium: {
    ...mediumType,
    lineHeight: MdSysTypescaleTitleMediumLineHeight,
    fontSize: parseFloat(MdSysTypescaleTitleMediumSize),
  },
  titleSmall: {
    ...mediumType,
    letterSpacing: parseFloat(MdSysTypescaleTitleSmallTracking),
    lineHeight: parseFloat(MdSysTypescaleTitleSmallLineHeight),
    fontSize: parseFloat(MdSysTypescaleTitleSmallSize),
  },

  labelLarge: {
    ...mediumType,
    letterSpacing: parseFloat(MdSysTypescaleLabelLargeTracking),
    lineHeight: parseFloat(MdSysTypescaleLabelLargeLineHeight),
    fontSize: parseFloat(MdSysTypescaleLabelLargeSize),
  },
  labelMedium: {
    ...mediumType,
    letterSpacing: parseFloat(MdSysTypescaleLabelMediumTracking),
    lineHeight: parseFloat(MdSysTypescaleLabelMediumLineHeight),
    fontSize: parseInt(MdSysTypescaleLabelMediumSize),
  },
  labelSmall: {
    ...mediumType,
    letterSpacing: parseFloat(MdSysTypescaleLabelSmallTracking),
    lineHeight: parseFloat(MdSysTypescaleLabelSmallLineHeight),
    fontSize: parseFloat(MdSysTypescaleLabelSmallSize),
  },

  bodyLarge: {
    ...mediumType,
    fontWeight: ref.typeface.weightRegular,
    fontFamily: ref.typeface.brandRegular,
    lineHeight: parseFloat(MdSysTypescaleBodyLargeLineHeight),
    fontSize: parseFloat(MdSysTypescaleBodyLargeSize),
  },

  bodyMedium: {
    ...mediumType,
    fontWeight: ref.typeface.weightRegular,
    fontFamily: ref.typeface.brandRegular,
    letterSpacing: parseFloat(MdSysTypescaleBodyMediumTracking),
    lineHeight: parseFloat(MdSysTypescaleBodyMediumLineHeight),
    fontSize: parseFloat(MdSysTypescaleBodyMediumSize),
  },
  bodySmall: {
    ...mediumType,
    fontWeight: ref.typeface.weightRegular,
    fontFamily: ref.typeface.brandRegular,
    letterSpacing: parseFloat(MdSysTypescaleBodySmallTracking),
    lineHeight: parseFloat(MdSysTypescaleBodySmallLineHeight),
    fontSize: parseFloat(MdSysTypescaleBodySmallSize),
  },
};

export const tokens = {
  md: {
    ref,
    sys: {
      typescale,
    },
  },
};

export const MD3Colors = ref.palette;
